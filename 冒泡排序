#include <iostream>
using namespace std;
void maopao(int arr[] ,int n){
  for (int i = 0; i < n-1; i++)
  {
     for (int j = 0; j < n-i-1; j++)
     {
        if (arr[j]>arr[j+1])
        {
             int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
        }
        
     }
    
  }
  
}

int main() {
    int n=0;
    cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++)
    {
        cin>>arr[i];
    }
   
    maopao(arr,n);
    for (int i = 0; i < n; i++)
    {
        cout<<arr[i];
    }

    system("pause");
    return 0;
}
/*第一轮迭代：

比较 64 和 34，交换位置，数组变为 {34, 64, 25, 12, 22, 11, 90}
比较 64 和 25，交换位置，数组变为 {34, 25, 64, 12, 22, 11, 90}
比较 64 和 12，交换位置，数组变为 {34, 25, 12, 64, 22, 11, 90}
比较 64 和 22，交换位置，数组变为 {34, 25, 12, 22, 64, 11, 90}
比较 64 和 11，交换位置，数组变为 {34, 25, 12, 22, 11, 64, 90}
比较 64 和 90，无需交换位置
第二轮迭代：

比较 34 和 25，交换位置，数组变为 {25, 34, 12, 22, 11, 64, 90}
比较 34 和 12，交换位置，数组变为 {25, 12, 34, 22, 11, 64, 90}
比较 34 和 22，交换位置，数组变为 {25, 12, 22, 34, 11, 64, 90}
比较 34 和 11，交换位置，数组变为 {25, 12, 22, 11, 34, 64, 90}
比较 34 和 64，无需交换位置
比较 64 和 90，无需交换位置
第三轮迭代：

比较 25 和 12，交换位置，数组变为 {12, 25, 22, 11, 34, 64, 90}
比较 25 和 22，交换位置，数组变为 {12, 22, 25, 11, 34, 64, 90}
比较 25 和 11，交换位置，数组变为 {12, 22, 11, 25, 34, 64, 90}
比较 25 和 34，无需交换位置
比较 34 和 64，无需交换位置
比较 64 和 90，无需交换位置
第四轮迭代：

比较 12 和 22，无需交换位置
比较 22 和 11，交换位置，数组变为 {12, 11, 22, 25, 34, 64, 90}
比较 22 和 25，无需交换位置
比较 25 和 34，无需交换位置
比较 34 和 64，无需交换位置
比较 64 和 90，无需交换位置
第五轮迭代：

比较 12 和 11，交换位置，数组变为 {11, 12, 22, 25, 34, 64, 90}
比较 12 和 22，无需交换位置
比较 22 和 25，无需交换位置
比较 25 和 34，无需交换位置
比较 34 和 64，无需交换位置
比较 64 和 90，无需交换位置
第六轮迭代：

比较 11 和 12，无需交换位置
比较 12 和 22，无需交换位置
比较 22 和 25，无需交换位置
比较 25 和 34，无需交换位置
比较 34 和 64，无需交换位置
比较 64 和 90，无需交换位置
最后，数组已经排序完成。*/
